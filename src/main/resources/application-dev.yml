server:
  port: 8080

spring:
  config:
    activate:
      on-profile: dev
    import: aws-parameterstore:/param/fresh2you_${spring.profiles.active}/
  payment:
    toss:
      client-key: test_ck_P9BRQmyarYxjwxpd0BKNVJ07KzLN
      secret-key: test_sk_DpexMgkW36P5lGL1n5GdrGbR5ozO
      security-key: 6a0012a9c2e442c91e6756c6e2dac9b0ee95c54f9707f9aeb5aa2115f19e68c6
      url: api.tosspayments.com/v1/payments
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

        registration:
          kakao:
            clientId: ${kakao.client.id}
            clientSecret: ${kakao.client.secret}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: kakao
            redirectUri: ${kakao.client.redirect.uri}
            scope:
              #            - profile_nickname
              #            - profile_image
              - account_email

  mail:
    host: smtp.gmail.com
    port: ${mail.port}
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

  coolsms:
    apiKey: ${coolsms.key}
    apiSecret: ${coolsms.secret}
    fromNumber: ${coolsms.number}
    apiUrl: https://api.coolsms.co.kr

  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}

  jwt:
    secret: ${jwt.secret}

  datasource:
    driver-class-name: ${datasource.driver}
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true      # 쿼리 로그 포맷 (정렬)
        show_sql: false        # 쿼리 로그 출력

cloud:
  aws:
    s3:
      bucket: ${s3.bucket}
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${s3.access}
      secretKey: ${s3.secret}

decorator:
  datasource:
    p6spy:
      enable-logging: true
