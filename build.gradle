plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.zb'
version = ''

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// aws cloud s3
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

	// aws cloud parameter-store
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store:3.1.1'

	// jjwt
	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	// feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'

	// p6spy logging
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.3'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.3'

	// sms
	implementation 'net.nurigo:sdk:4.3.0'

	// fixturemonkey (https://github.com/naver/fixture-monkey)
	testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.24")

	// email - certificate
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//Jackson JSON
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//hibernate
	implementation 'org.hibernate:hibernate-core:6.2.7.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:3.12.4'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
	testImplementation 'net.jqwik:jqwik:1.5.3'
}

def generatedQueryDsl = 'src/main/generated'

sourceSets {
	main.java.srcDirs += [generatedQueryDsl]
}

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generatedQueryDsl))
}

clean.doLast {
	file(generatedQueryDsl).deleteDir()
}

tasks.named('test') {
	useJUnitPlatform()
}
